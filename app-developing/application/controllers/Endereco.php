<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Endereco extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Endereco_model');
    } 

    /*
     * Listing of enderecos
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('endereco/index?');
        $config['total_rows'] = $this->Endereco_model->get_all_enderecos_count();
        $this->pagination->initialize($config);

        $data['enderecos'] = $this->Endereco_model->get_all_enderecos($params);
        
        $data['_view'] = 'endereco/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new endereco
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('numero','Numero','numeric');
		$this->form_validation->set_rules('rua','Rua','required');
		$this->form_validation->set_rules('cidade','Cidade','required');
		$this->form_validation->set_rules('bairro','Bairro','required');
		$this->form_validation->set_rules('uf','Uf','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'rua' => $this->input->post('rua'),
				'bairro' => $this->input->post('bairro'),
				'cidade' => $this->input->post('cidade'),
				'referencia' => $this->input->post('referencia'),
				'numero' => $this->input->post('numero'),
				'uf' => $this->input->post('uf'),
				'cep' => $this->input->post('cep'),
            );
            
            $endereco_id = $this->Endereco_model->add_endereco($params);
            redirect('endereco/index');
        }
        else
        {            
            $data['_view'] = 'endereco/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a endereco
     */
    function edit($id_endereco)
    {   
        // check if the endereco exists before trying to edit it
        $data['endereco'] = $this->Endereco_model->get_endereco($id_endereco);
        
        if(isset($data['endereco']['id_endereco']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('numero','Numero','numeric');
			$this->form_validation->set_rules('rua','Rua','required');
			$this->form_validation->set_rules('cidade','Cidade','required');
			$this->form_validation->set_rules('bairro','Bairro','required');
			$this->form_validation->set_rules('uf','Uf','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'rua' => $this->input->post('rua'),
					'bairro' => $this->input->post('bairro'),
					'cidade' => $this->input->post('cidade'),
					'referencia' => $this->input->post('referencia'),
					'numero' => $this->input->post('numero'),
					'uf' => $this->input->post('uf'),
					'cep' => $this->input->post('cep'),
                );

                $this->Endereco_model->update_endereco($id_endereco,$params);            
                redirect('endereco/index');
            }
            else
            {
                $data['_view'] = 'endereco/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The endereco you are trying to edit does not exist.');
    } 

    /*
     * Deleting endereco
     */
    function remove($id_endereco)
    {
        $endereco = $this->Endereco_model->get_endereco($id_endereco);

        // check if the endereco exists before trying to delete it
        if(isset($endereco['id_endereco']))
        {
            $this->Endereco_model->delete_endereco($id_endereco);
            redirect('endereco/index');
        }
        else
            show_error('The endereco you are trying to delete does not exist.');
    }
    
}
